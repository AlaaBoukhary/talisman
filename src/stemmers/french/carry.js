/* eslint-disable */
/**
 * Talisman stemmers/french/carry
 * ===============================
 *
 * The Carry stemmer for the French language.
 *
 * [Reference]:
 * http://www.otlet-institute.org/docs/Carry.pdf
 *
 * [Article]:
 * Carry, un algorithme de désuffixation pour le français. M. Paternostre,
 * P. Francq, J. Lamoral, D. Wartel et M. Saerens. 2002
 */

/**
 * Constants.
 */
const VOWELS = 'aeiouyâàëéêèïîôûùœæ',
      V = `[${VOWELS}]`,
      C = `[^${VOWELS}]`;

const LC = new RegExp(`^${C}+`),
      TV = new RegExp(`${V}+$`),
      M = new RegExp(`(${V}+${C}+)`);

/**
 * Helpers.
 */
function computeM(string) {

  // Removing leading consonants
  string = string
    .replace(LC, '')
    .replace(TV, '');

  return (string.match(M) || []).length;
}

/**
 * Rules.
 */
const STEP1 = [
  [0, 'issements'],
  [0, 'eassions'],
  [0, 'ellement', 'el'],
  [1, 'ications'],
  [0, 'issaient'],
  [0, 'issantes'],
  [0, 'issement'],
  [0, 'alement', 'al'],
  [0, 'assions'],
  [0, 'eassent'],
  [0, 'eassiez'],
  [0, 'eraient'],
  [0, 'eresses'],
  [1, 'iations'],
  [1, 'ication'],
  [0, 'iraient'],
  [0, 'issante'],
  [0, 'issants'],
  [0, 'issions'],
  [0, 'ussions'],
  [0, 'amment'],
  [0, 'assent'],
  [0, 'assiez'],
  [0, 'assons'],
  [1, 'ateurs'],
  [1, 'ations'],
  [0, 'eaient'],
  [0, 'eantes'],
  [0, 'easses'],
  [0, 'ements'],
  [0, 'emment'],
  [0, 'eresse'],
  [0, 'erions'],
  [0, 'etudes'],
  [1, 'iation'],
  [0, 'irions'],
  [0, 'issais'],
  [0, 'issait'],
  [0, 'issant'],
  [0, 'issent'],
  [0, 'issiez'],
  [0, 'issons'],
  [0, 'itudes'],
  [0, 'uction'],
  [0, 'ussent'],
  [0, 'ussiez'],
  [0, 'études'],
  [0, 'ables'],
  [0, 'ables'],
  [0, 'aient'],
  [0, 'aires'],
  [0, 'aises'],
  [0, 'ances'],
  [0, 'antes'],
  [0, 'asses'],
  [0, 'assez'],
  [1, 'ation'],
  [0, 'cques'],
  [0, 'eante'],
  [0, 'eants'],
  [0, 'easse'],
  [0, 'eille', 'eil'],
  [0, 'elles'],
  [0, 'ement'],
  [0, 'ences'],
  [0, 'entes'],
  [0, 'erais'],
  [0, 'erait'],
  [0, 'erent'],
  [0, 'eries'],
  [0, 'eriez'],
  [0, 'erons'],
  [0, 'eront'],
  [0, 'esses'],
  [0, 'ettes'],
  [0, 'etude'],
  [0, 'eures'],
  [0, 'euses'],
  [0, 'eâmes'],
  [0, 'eâtes'],
  [0, 'ients'],
  [0, 'ieres'],
  [0, 'irais'],
  [0, 'irait'],
  [0, 'irent'],
  [0, 'iriez'],
  [0, 'irons'],
  [0, 'iront'],
  [0, 'ismes'],
  [0, 'isses'],
  [0, 'issez'],
  [0, 'istes'],
  [0, 'ition'],
  [0, 'itude'],
  [0, 'itées'],
  [0, 'ières'],
  [0, 'oises', 'o'],
  [0, 'ouses', 'ou'],
  [1, 'teurs'],
  [0, 'tions'],
  [0, 'tions'],
  [0, 'trice'],
  [0, 'ulles', 'ul'],
  [0, 'usses'],
  [0, 'èrent'],
  [0, 'étude'],
  [0, 'îrent'],
  [0, 'able'],
  [0, 'ades'],
  [0, 'ages'],
  [0, 'aise'],
  [0, 'aise'],
  [0, 'ance'],
  [0, 'ante'],
  [0, 'ants'],
  [0, 'asse'],
  [0, 'cque', 'c'],
  [0, 'eais'],
  [0, 'eait'],
  [0, 'eant'],
  [0, 'elle'],
  [0, 'ence'],
  [0, 'ents'],
  [0, 'eons'],
  [0, 'eont'],
  [0, 'erai'],
  [0, 'eras'],
  [0, 'erez'],
  [0, 'erie'],
  [0, 'esse'],
  [0, 'etes'],
  [0, 'ette'],
  [0, 'eure'],
  [0, 'eurs'],
  [0, 'eurs'],
  [0, 'euse'],
  [0, 'gues', 'g'],
  [0, 'ient'],
  [0, 'iere'],
  [0, 'iers'],
  [0, 'ions'],
  [0, 'irai'],
  [0, 'iras'],
  [0, 'irez'],
  [0, 'isme'],
  [0, 'isse'],
  [0, 'iste'],
  [0, 'itée'],
  [0, 'ités'],
  [0, 'ière'],
  [0, 'nnes', 'n'],
  [0, 'oise'],
  [0, 'ouse', 'ou'],
  [0, 'ques', 'c'],
  [0, 'tion'],
  [0, 'ttes'],
  [0, 'ulle', 'ul'],
  [1, 'ures'],
  [0, 'usse'],
  [0, 'yeux', 'oeil'],
  [0, 'âmes'],
  [0, 'ètes'],
  [0, 'îmes'],
  [0, 'îtes'],
  [0, 'îtés'],
  [0, 'ûmes'],
  [0, 'ade'],
  [0, 'age'],
  [0, 'ais'],
  [0, 'ait'],
  [0, 'ant'],
  [0, 'ate'],
  [0, 'ats'],
  [0, 'aux', 'al'],
  [0, 'eai'],
  [0, 'eas'],
  [0, 'ees'],
  [0, 'ent'],
  [0, 'era'],
  [0, 'ete'],
  [0, 'eux'],
  [0, 'eât'],
  [0, 'gue', 'g'],
  [0, 'iez'],
  [0, 'ira'],
  [0, 'ite'],
  [0, 'ité'],
  [0, 'nne', 'n'],
  [0, 'ons'],
  [0, 'ont'],
  [0, 'que', 'c'],
  [0, 'tés'],
  [0, 'ète'],
  [0, 'ées'],
  [0, 'ai'],
  [0, 'as'],
  [0, 'at'],
  [0, 'au'],
  [0, 'ea'],
  [0, 'ea'],
  [0, 'ee'],
  [0, 'er'],
  [0, 'es'],
  [0, 'ez'],
  [0, 'fs', 'v'],
  [0, 'ir'],
  [0, 'is'],
  [0, 'it'],
  [0, 'rs'],
  [0, 'ts'],
  [0, 'té'],
  [0, 'ât'],
  [0, 'ée'],
  [0, 'és'],
  [0, 'ît'],
  [0, 'a'],
  [0, 'e'],
  [0, 'f', 'v'],
  [0, 'i'],
  [0, 'r'],
  [0, 's'],
  [0, 't'],
  [0, 'x'],
  [0, 'é']
];

const STEP2 = [
  [1, 'ation'],
  [1, 'ition'],
  [1, 'tion'],
  [1, 'ent'],
  [1, 'el'],
  [0, 'i']
];

const STEP3 = [
  [0, 'issements'],
  [0, 'eassions'],
  [0, 'ellement', 'el'],
  [1, 'ications'],
  [0, 'issaient'],
  [0, 'issantes'],
  [0, 'issement'],
  [0, 'alement', 'al'],
  [0, 'assions'],
  [0, 'eassent'],
  [0, 'eassiez'],
  [0, 'eraient'],
  [0, 'eresses'],
  [1, 'iations'],
  [1, 'ication'],
  [0, 'iraient'],
  [0, 'issante'],
  [0, 'issants'],
  [0, 'issions'],
  [0, 'ussions'],
  [0, 'amment'],
  [0, 'assent'],
  [0, 'assiez'],
  [0, 'assons'],
  [1, 'ateurs'],
  [1, 'ations'],
  [0, 'eaient'],
  [0, 'eantes'],
  [0, 'easses'],
  [0, 'eilles', 'eil'],
  [0, 'ements'],
  [0, 'emment'],
  [0, 'eresse'],
  [0, 'erions'],
  [0, 'etudes'],
  [1, 'iation'],
  [0, 'irions'],
  [0, 'issais'],
  [0, 'issait'],
  [0, 'issant'],
  [0, 'issent'],
  [0, 'issiez'],
  [0, 'issons'],
  [0, 'itudes'],
  [0, 'trices'],
  [0, 'uction'],
  [0, 'ussent'],
  [0, 'ussiez'],
  [0, 'études'],
  [0, 'ables'],
  [0, 'ables'],
  [0, 'aient'],
  [0, 'aires'],
  [0, 'aises'],
  [0, 'ances'],
  [0, 'antes'],
  [0, 'asses'],
  [0, 'assez'],
  [0, 'ateur'],
  [1, 'ation'],
  [1, 'ation'],
  [0, 'cques', 'c'],
  [0, 'eante'],
  [0, 'eants'],
  [0, 'easse'],
  [0, 'eille', 'eil'],
  [0, 'elles'],
  [0, 'ement'],
  [0, 'ences'],
  [0, 'entes'],
  [0, 'erais'],
  [0, 'erait'],
  [0, 'erent'],
  [0, 'eries'],
  [0, 'eriez'],
  [0, 'erons'],
  [0, 'eront'],
  [0, 'esses'],
  [0, 'ettes'],
  [0, 'etude'],
  [0, 'eures'],
  [0, 'euses'],
  [0, 'eâmes'],
  [0, 'eâtes'],
  [0, 'ients'],
  [0, 'ieres'],
  [0, 'irais'],
  [0, 'irait'],
  [0, 'irent'],
  [0, 'iriez'],
  [0, 'irons'],
  [0, 'iront'],
  [0, 'ismes'],
  [0, 'isses'],
  [0, 'issez'],
  [0, 'istes'],
  [0, 'ition'],
  [1, 'ition'],
  [0, 'itude'],
  [0, 'itées'],
  [0, 'ières'],
  [0, 'oises', 'o'],
  [0, 'ouses', 'ou'],
  [1, 'teurs'],
  [0, 'tions'],
  [0, 'tions'],
  [0, 'trice'],
  [0, 'ulles', 'ul'],
  [0, 'usses'],
  [0, 'èrent'],
  [0, 'étude'],
  [0, 'îrent'],
  [0, 'able'],
  [0, 'ades'],
  [0, 'ages'],
  [0, 'aire'],
  [0, 'aise'],
  [0, 'aise'],
  [0, 'ance'],
  [0, 'ante'],
  [0, 'ants'],
  [0, 'asse'],
  [0, 'ates'],
  [0, 'cque', 'c'],
  [0, 'eais'],
  [0, 'eait'],
  [0, 'eant'],
  [0, 'elle'],
  [0, 'ence'],
  [0, 'ents'],
  [0, 'eons'],
  [0, 'eont'],
  [0, 'erai'],
  [0, 'eras'],
  [0, 'erez'],
  [0, 'erie'],
  [0, 'esse'],
  [0, 'esse'],
  [0, 'etes'],
  [0, 'ette'],
  [0, 'eure'],
  [0, 'eurs'],
  [0, 'eurs'],
  [0, 'gues', 'g'],
  [0, 'ient'],
  [0, 'iers'],
  [0, 'ions'],
  [0, 'irai'],
  [0, 'iras'],
  [0, 'irez'],
  [0, 'isme'],
  [0, 'isse'],
  [0, 'iste'],
  [0, 'ites'],
  [0, 'itée'],
  [0, 'ités'],
  [0, 'ière'],
  [0, 'nnes', 'n'],
  [0, 'oise'],
  [0, 'ouse', 'ous'],
  [0, 'ques', 'c'],
  [1, 'teur'],
  [0, 'tion'],
  [1, 'tion'],
  [0, 'ttes'],
  [0, 'ulle', 'ul'],
  [1, 'ures'],
  [0, 'usse'],
  [0, 'yeux', 'oeil'],
  [0, 'âmes'],
  [0, 'ètes'],
  [0, 'îmes'],
  [0, 'îtes'],
  [0, 'îtes'],
  [0, 'ûmes'],
  [0, 'ade'],
  [0, 'age'],
  [0, 'ais'],
  [0, 'ait'],
  [0, 'ant'],
  [0, 'ate'],
  [0, 'ats'],
  [0, 'aux', 'al'],
  [0, 'eai'],
  [0, 'eas'],
  [0, 'eau'],
  [0, 'ees'],
  [0, 'ent'],
  [1, 'ent'],
  [0, 'era'],
  [0, 'ete'],
  [0, 'eux'],
  [0, 'eât'],
  [0, 'gue', 'g'],
  [0, 'ier'],
  [0, 'iez'],
  [0, 'ira'],
  [0, 'ite'],
  [0, 'ité'],
  [0, 'nne', 'n'],
  [0, 'ons'],
  [0, 'ont'],
  [0, 'que', 'c'],
  [0, 'tés'],
  [1, 'ure'],
  [0, 'ète'],
  [0, 'ées'],
  [0, 'ai'],
  [0, 'as'],
  [0, 'at'],
  [0, 'au'],
  [0, 'ea'],
  [0, 'ee'],
  [1, 'el'],
  [0, 'er'],
  [0, 'es'],
  [0, 'ez'],
  [0, 'fs', 'v'],
  [0, 'gu', 'g'],
  [0, 'gu', 'g'],
  [0, 'ir'],
  [0, 'is'],
  [0, 'it'],
  [0, 'll', 'l'],
  [0, 'll', 'l'],
  [0, 'nn', 'n'],
  [0, 'nn', 'n'],
  [0, 'qu', 'c'],
  [0, 'qu', 'c'],
  [0, 'rs'],
  [0, 'ts'],
  [0, 'tt', 't'],
  [0, 'tt', 't'],
  [0, 'té'],
  [0, 'ât'],
  [0, 'ée'],
  [0, 'és'],
  [0, 'ît'],
  [0, 'a'],
  [0, 'e'],
  [0, 'f', 'v'],
  [0, 'i'],
  [0, 'i'],
  [0, 'r'],
  [0, 's'],
  [0, 't'],
  [0, 't'],
  [0, 't'],
  [0, 'x'],
  [0, 'y'],
  [0, 'y'],
  [0, 'é']
];

/**
 * Function stemming the given world using the Carry algorithm for the French
 * language.
 *
 * @param  {string} word - The word to stem.
 * @return {string}      - The resulting stem.
 */
export default function carry(word) {
  let stem = word.toLowerCase();

  // Step 1
  for (let i = 0, l = STEP1.length; i < l; i++) {
    const [min, pattern, replacement = ''] = STEP1[i];

    if (stem.slice(-pattern.length) === pattern) {
      const newStem = stem.slice(0, -pattern.length) + replacement,
            m = computeM(newStem);

      if (m <= min)
        continue;
console.log(1, m, pattern);
      stem = newStem;
      break;
    }
  }

  // Step 2
  for (let i = 0, l = STEP2.length; i < l; i++) {
    const [min, pattern, replacement = ''] = STEP2[i];

    if (stem.slice(-pattern.length) === pattern) {
      const newStem = stem.slice(0, -pattern.length) + replacement,
            m = computeM(newStem);

      if (m <= min)
        continue;
console.log(2, m, pattern);
      stem = newStem;
      break;
    }
  }

  // Step 3
  for (let i = 0, l = STEP3.length; i < l; i++) {
    const [min, pattern, replacement = ''] = STEP3[i];

    if (stem.slice(-pattern.length) === pattern) {
      const newStem = stem.slice(0, -pattern.length) + replacement,
            m = computeM(newStem);

      if (m <= min)
        continue;
console.log(3, m, pattern);
      stem = newStem;
      break;
    }
  }

  return stem;
}

console.log(carry('Chiennes'));
console.log(carry('Tissaient'));
console.log(carry('Tisser'));
console.log(carry('tisserand'));
console.log(carry('enflammer'))
console.log(carry('groseilles'))
console.log(carry('tentateur'))
console.log(carry('tentateurs'))
console.log(carry('tentatrice'))
console.log(carry('tenter'))
console.log(carry('tenteras'))
